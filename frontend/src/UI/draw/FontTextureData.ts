export default class FontTextureData{
    //compression ;p
    // url/charmapToBytes  TextureTool folder
    static rawData=[138,0,1,255,5,0,1,255,1,0,1,255,4,0,1,255,1,0,1,255,5,0,1,255,4,0,2,255,6,0,3,255,5,0,1,255,7,0,1,255,4,0,1,255,48,0,3,255,5,0,1,255,15,0,1,255,5,0,1,255,1,0,1,255,4,0,1,255,1,0,1,255,4,0,4,255,2,0,2,255,2,0,1,255,2,0,1,255,2,0,1,255,5,0,1,255,6,0,1,255,6,0,1,255,4,0,1,255,1,0,1,255,1,0,1,255,4,0,1,255,29,0,1,255,2,0,1,255,3,0,1,255,3,0,2,255,15,0,1,255,11,0,5,255,2,0,1,255,1,0,1,255,7,0,1,255,3,0,1,255,1,0,1,255,12,0,1,255,8,0,1,255,4,0,3,255,5,0,1,255,28,0,1,255,3,0,1,255,2,0,2,255,2,0,1,255,1,0,1,255,15,0,1,255,12,0,1,255,1,0,1,255,4,0,3,255,5,0,1,255,5,0,1,255,13,0,1,255,8,0,1,255,3,0,5,255,2,0,5,255,9,0,5,255,11,0,1,255,4,0,1,255,1,0,1,255,1,0,1,255,4,0,1,255,15,0,1,255,11,0,5,255,4,0,1,255,1,0,1,255,3,0,1,255,5,0,1,255,1,0,1,255,1,0,1,255,10,0,1,255,8,0,1,255,4,0,3,255,5,0,1,255,6,0,1,255,19,0,1,255,5,0,2,255,2,0,1,255,4,0,1,255,28,0,1,255,1,0,1,255,3,0,4,255,3,0,1,255,2,0,2,255,2,0,1,255,2,0,1,255,12,0,1,255,6,0,1,255,4,0,1,255,1,0,1,255,1,0,1,255,4,0,1,255,6,0,1,255,18,0,1,255,6,0,1,255,3,0,1,255,4,0,1,255,15,0,1,255,12,0,1,255,1,0,1,255,5,0,1,255,7,0,2,255,3,0,2,255,1,0,1,255,12,0,1,255,4,0,1,255,20,0,1,255,14,0,1,255,12,0,3,255,3,0,5,255,261,0,3,255,4,0,3,255,5,0,2,255,3,0,5,255,3,0,3,255,3,0,5,255,3,0,3,255,4,0,3,255,39,0,3,255,4,0,3,255,4,0,3,255,3,0,4,255,4,0,3,255,5,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,3,0,1,255,1,0,1,255,3,0,1,255,6,0,1,255,10,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,4,0,1,255,6,0,1,255,7,0,1,255,11,0,1,255,5,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,8,0,1,255,6,0,1,255,2,0,1,255,2,0,1,255,3,0,1,255,6,0,1,255,9,0,1,255,3,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,18,0,1,255,4,0,5,255,4,0,1,255,4,0,1,255,3,0,1,255,2,0,1,255,1,0,3,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,11,0,1,255,5,0,2,255,3,0,5,255,2,0,4,255,3,0,4,255,5,0,1,255,5,0,3,255,4,0,4,255,17,0,1,255,15,0,1,255,6,0,1,255,3,0,1,255,1,0,1,255,1,0,1,255,2,0,5,255,2,0,4,255,3,0,1,255,10,0,1,255,8,0,1,255,5,0,1,255,7,0,1,255,2,0,1,255,3,0,1,255,3,0,1,255,5,0,1,255,3,0,1,255,6,0,1,255,11,0,1,255,6,0,1,255,4,0,5,255,4,0,1,255,6,0,1,255,4,0,1,255,1,0,3,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,9,0,1,255,5,0,1,255,3,0,1,255,5,0,1,255,7,0,1,255,2,0,1,255,3,0,1,255,3,0,1,255,5,0,1,255,3,0,1,255,6,0,1,255,4,0,1,255,6,0,1,255,7,0,1,255,11,0,1,255,12,0,1,255,6,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,4,0,5,255,3,0,3,255,6,0,1,255,3,0,4,255,4,0,3,255,4,0,1,255,6,0,3,255,4,0,3,255,11,0,1,255,28,0,1,255,5,0,3,255,3,0,1,255,3,0,1,255,2,0,4,255,4,0,3,255,261,0,4,255,3,0,5,255,2,0,5,255,3,0,3,255,3,0,1,255,3,0,1,255,2,0,5,255,2,0,5,255,2,0,1,255,3,0,1,255,2,0,1,255,6,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,3,0,3,255,3,0,4,255,4,0,3,255,3,0,4,255,4,0,4,255,2,0,5,255,2,0,1,255,3,0,1,255,4,0,1,255,3,0,1,255,2,0,1,255,6,0,1,255,6,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,4,0,1,255,8,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,6,0,2,255,1,0,2,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,8,0,1,255,4,0,1,255,3,0,1,255,4,0,1,255,3,0,1,255,2,0,1,255,6,0,1,255,6,0,1,255,6,0,1,255,3,0,1,255,4,0,1,255,8,0,1,255,2,0,1,255,2,0,1,255,3,0,1,255,6,0,1,255,1,0,1,255,1,0,1,255,2,0,2,255,2,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,8,0,1,255,4,0,1,255,3,0,1,255,4,0,1,255,3,0,1,255,2,0,4,255,3,0,4,255,3,0,1,255,6,0,5,255,4,0,1,255,8,0,1,255,2,0,3,255,4,0,1,255,6,0,1,255,3,0,1,255,2,0,1,255,1,0,1,255,1,0,1,255,2,0,1,255,3,0,1,255,2,0,4,255,3,0,1,255,3,0,1,255,2,0,4,255,4,0,3,255,5,0,1,255,4,0,1,255,3,0,1,255,4,0,1,255,3,0,1,255,2,0,1,255,6,0,1,255,6,0,1,255,2,0,2,255,2,0,1,255,3,0,1,255,4,0,1,255,8,0,1,255,2,0,1,255,2,0,1,255,3,0,1,255,6,0,1,255,3,0,1,255,2,0,1,255,2,0,2,255,2,0,1,255,3,0,1,255,2,0,1,255,6,0,1,255,1,0,1,255,1,0,1,255,2,0,1,255,3,0,1,255,6,0,1,255,4,0,1,255,4,0,1,255,3,0,1,255,4,0,1,255,3,0,1,255,2,0,1,255,6,0,1,255,6,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,4,0,1,255,4,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,6,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,6,0,1,255,2,0,1,255,3,0,1,255,3,0,1,255,6,0,1,255,4,0,1,255,4,0,1,255,3,0,1,255,4,0,4,255,3,0,5,255,2,0,1,255,7,0,3,255,3,0,1,255,3,0,1,255,2,0,5,255,3,0,3,255,3,0,1,255,3,0,1,255,2,0,5,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,3,0,3,255,3,0,1,255,7,0,2,255,1,0,1,255,2,0,1,255,3,0,1,255,2,0,4,255,5,0,1,255,5,0,3,255,261,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,5,255,4,0,2,255,11,0,2,255,6,0,1,255,12,0,1,255,12,0,1,255,17,0,1,255,11,0,2,255,12,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,6,0,1,255,4,0,1,255,4,0,1,255,8,0,1,255,5,0,1,255,1,0,1,255,12,0,1,255,11,0,1,255,17,0,1,255,10,0,1,255,14,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,3,0,1,255,1,0,1,255,4,0,1,255,1,0,1,255,6,0,1,255,5,0,1,255,5,0,1,255,7,0,1,255,26,0,3,255,3,0,4,255,4,0,3,255,4,0,4,255,3,0,3,255,3,0,5,255,3,0,4,255,4,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,4,0,1,255,6,0,1,255,6,0,1,255,6,0,1,255,6,0,1,255,6,0,1,255,29,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,3,0,1,255,5,0,1,255,3,0,1,255,4,0,1,255,3,0,1,255,2,0,1,255,1,0,1,255,1,0,1,255,3,0,1,255,1,0,1,255,5,0,1,255,5,0,1,255,7,0,1,255,7,0,1,255,5,0,1,255,26,0,4,255,2,0,1,255,3,0,1,255,2,0,1,255,6,0,1,255,3,0,1,255,2,0,5,255,3,0,1,255,6,0,4,255,5,0,1,255,1,0,1,255,3,0,2,255,1,0,2,255,2,0,1,255,3,0,1,255,4,0,1,255,4,0,1,255,8,0,1,255,8,0,1,255,4,0,1,255,25,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,7,0,1,255,9,0,1,255,6,0,1,255,4,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,4,0,1,255,4,0,5,255,4,0,2,255,11,0,2,255,11,0,5,255,10,0,4,255,2,0,4,255,4,0,3,255,4,0,4,255,3,0,4,255,3,0,1,255,6,0,3,255,261,0,1,255,8,0,1,255,8,0,1,255,2,0,1,255,6,0,1,255,56,0,1,255,42,0,1,255,20,0,1,255,6,0,1,255,56,0,1,255,42,0,4,255,3,0,3,255,6,0,3,255,2,0,1,255,2,0,1,255,3,0,1,255,6,0,2,255,1,0,1,255,3,0,4,255,4,0,3,255,3,0,4,255,4,0,4,255,2,0,1,255,1,0,2,255,4,0,4,255,2,0,4,255,3,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,4,0,1,255,3,0,1,255,4,0,1,255,8,0,1,255,2,0,3,255,4,0,1,255,6,0,1,255,1,0,1,255,1,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,2,255,2,0,1,255,2,0,1,255,7,0,1,255,5,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,3,0,1,255,1,0,1,255,3,0,1,255,3,0,1,255,4,0,1,255,3,0,1,255,4,0,1,255,8,0,1,255,2,0,1,255,2,0,1,255,3,0,1,255,6,0,1,255,1,0,1,255,1,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,4,255,4,0,4,255,2,0,1,255,7,0,3,255,4,0,1,255,5,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,4,0,1,255,5,0,4,255,4,0,1,255,3,0,1,255,4,0,1,255,4,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,6,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,2,0,1,255,10,0,1,255,2,0,1,255,10,0,1,255,3,0,1,255,2,0,1,255,2,0,1,255,3,0,1,255,3,0,1,255,1,0,1,255,3,0,1,255,1,0,1,255,1,0,1,255,3,0,1,255,1,0,1,255,7,0,1,255,4,0,1,255,3,0,1,255,2,0,5,255,3,0,3,255,3,0,1,255,3,0,1,255,3,0,3,255,3,0,1,255,3,0,1,255,2,0,1,255,3,0,1,255,3,0,3,255,3,0,1,255,10,0,1,255,2,0,1,255,6,0,4,255,5,0,2,255,4,0,4,255,4,0,1,255,5,0,1,255,1,0,1,255,3,0,1,255,3,0,1,255,3,0,3,255,271,0,1,255,5,0,1,255,5,0,1,255,114,0,1,255,6,0,1,255,6,0,1,255,104,0,5,255,4,0,1,255,6,0,1,255,6,0,1,255,5,0,1,255,2,0,1,255,98,0,1,255,4,0,1,255,7,0,1,255,7,0,1,255,3,0,1,255,1,0,2,255,98,0,1,255,6,0,1,255,6,0,1,255,6,0,1,255,105,0,1,255,7,0,1,255,6,0,1,255,6,0,1,255,104,0,5,255,5,0,1,255,5,0,1,255,5,0,1,255,13,0,1,255,1,0,1,255,1,0,1,255,1606,0,1,255,127,0,1,255,127,0,1,255,26,0,1,10,1,185,1,56,22,0,1,183,1,42,65,0,2,255,7,0,1,255,25,0,1,3,1,177,1,255,1,195,5,0,1,187,7,255,1,182,8,0,1,255,1,251,1,149,1,20,13,0,1,183,1,36,18,0,1,42,1,183,10,0,1,36,1,171,2,239,1,171,1,36,12,0,2,255,7,0,1,255,25,0,1,150,1,255,1,227,1,28,5,0,1,45,1,252,5,255,1,251,1,42,8,0,3,255,1,239,1,120,1,9,11,0,1,255,1,249,1,140,1,12,14,0,1,16,1,140,1,251,1,255,9,0,1,34,1,232,1,110,2,17,1,110,1,232,1,34,20,0,1,255,17,0,1,40,1,187,1,15,4,0,1,120,1,255,1,240,1,45,7,0,1,154,5,255,1,148,9,0,5,255,1,225,1,89,1,1,9,0,3,255,1,230,1,98,1,1,10,0,1,2,1,98,1,235,3,255,9,0,1,171,1,118,4,0,1,118,1,171,20,0,1,255,17,0,1,193,1,255,1,180,1,1,2,0,1,91,1,254,1,249,1,66,8,0,1,24,1,242,3,255,1,240,1,21,9,0,7,255,1,143,9,0,5,255,1,143,10,0,1,150,5,255,9,0,1,239,1,17,4,0,1,15,1,239,11,0,2,255,7,0,1,255,17,0,1,37,1,240,1,255,1,128,1,0,1,66,1,249,1,254,1,91,10,0,1,123,3,255,1,117,10,0,5,255,1,225,1,89,1,1,9,0,3,255,1,230,1,92,1,1,10,0,1,1,1,96,1,230,3,255,9,0,1,239,1,16,4,0,1,15,1,240,11,0,2,255,7,0,1,255,18,0,1,75,2,254,1,108,1,240,1,255,1,120,11,0,1,9,1,225,1,255,1,222,1,7,10,0,3,255,1,243,1,123,1,9,11,0,1,255,1,249,1,134,1,12,14,0,1,12,1,138,1,249,1,255,9,0,1,171,1,117,4,0,1,117,1,172,20,0,1,255,19,0,1,127,1,255,1,253,1,255,1,150,13,0,1,90,1,255,1,85,11,0,1,255,1,251,1,149,1,21,13,0,1,176,1,36,18,0,1,36,1,180,9,0,1,35,1,232,1,109,2,15,1,109,1,232,1,35,20,0,1,255,19,0,1,1,1,237,1,255,1,233,1,3,13,0,1,1,1,142,1,1,11,0,1,183,1,42,47,0,1,36,1,171,2,239,1,172,1,37,12,0,2,255,7,0,1,255,20,0,1,63,1,233,1,43,95,0,2,255,7,0,1,255,127,0,1,255,127,0,1,255,127,0,1,255,548,0,4,255,1,35,10,0,1,255,6,0,1,255,8,0,3,255,2,0,3,255,10,0,1,255,2,0,1,255,75,0,1,255,15,0,1,255,4,0,1,255,9,0,1,255,6,0,1,255,10,0,1,255,2,0,1,255,59,0,1,244,1,141,2,0,1,156,1,221,10,0,1,255,1,0,4,255,1,29,10,0,1,255,2,0,1,255,10,0,1,255,6,0,1,255,8,0,3,255,2,0,3,255,57,0,1,125,1,255,1,141,1,156,1,255,1,88,10,0,1,255,1,0,1,255,2,0,1,255,1,19,11,0,2,255,93,0,1,184,2,255,1,170,11,0,1,255,1,0,1,255,2,0,1,255,1,12,11,0,2,255,93,0,1,38,1,233,1,221,12,0,1,255,1,0,1,255,2,0,1,255,1,7,10,0,1,255,2,0,1,255,10,0,1,255,6,0,1,255,8,0,3,255,2,0,3,255,75,0,1,255,2,0,1,255,1,6,9,0,1,255,4,0,1,255,9,0,1,255,6,0,1,255,10,0,1,255,2,0,1,255,77,0,3,255,1,243,1,8,8,0,1,255,6,0,1,255,8,0,3,255,2,0,3,255,10,0,1,255,2,0,1,255,78,0,1,10 ];
    static width =128
    static height =128
    static getData():Uint8ClampedArray
    {
            let f = new Uint8ClampedArray(this.width*this.height)
            let pos=0;
            for(let i=0;i<this.rawData.length;i+=2)
            {
                let num =this.rawData[i];
                let val =this.rawData[i+1];
                f.fill(val,pos,pos+num)
                pos+=num;
            }
            return f;
    }

}
